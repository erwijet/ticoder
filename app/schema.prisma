generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "debian-openssl-3.0.x", "linux-musl", "linux-musl-arm64-openssl-3.0.x"]
    previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id String @id @default(cuid())
  updatedAt DateTime @default(now()) @updatedAt

  name    String
  description String @default("")
  blockly String
  source  String

  published Boolean @default(false)
  stars     Star[]

  accountId String
  account   Account @relation(fields: [accountId], references: [id])
}

model Account {
  id     String @id @default(cuid())
  userId String

  handle      String
  email       String @default("no-account@ticoder.dev")
  displayName String
  following   Follower[] @relation("Followers")
  followers   Follower[] @relation("Following")
  stars       Star[]
  projects    Project[]
}

model Star {
  id        String  @id @default(cuid())
  account   Account @relation(fields: [accountId], references: [id])
  accountId String
  project   Project @relation(fields: [projectId], references: [id])
  projectId String
}

model Follower {
  id          String   @id @default(cuid())
  followerId  String
  followingId String
  followedAt  DateTime @default(now())

  followers Account @relation("Followers", fields: [followerId], references: [id])
  following Account @relation("Following", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
}